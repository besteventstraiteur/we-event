
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from '@/types/supabase-db';

const SUPABASE_URL = "https://awraiakbiahrzncoeyya.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF3cmFpYWtiaWFocnpuY29leXlhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ1MjYwOTUsImV4cCI6MjA2MDEwMjA5NX0.8da1AC1m6DDwrLbRPlYZ9KHx89pE4xtw2AkTQFbciys";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  },
  db: {
    schema: 'public',
  },
  global: {
    // Add global error handling
    fetch: (...args) => {
      // Fix: Properly type and spread the arguments
      return fetch(args[0] as RequestInfo | URL, args[1] as RequestInit | undefined).catch(err => {
        console.error("Supabase fetch error:", err);
        // Still throw the error to be handled by the caller
        throw err;
      });
    }
  }
});

// Helper function to test database connection
export const testDatabaseConnection = async () => {
  try {
    // Try a simple query
    const { data, error } = await supabase.from('profiles').select('id').limit(1);
    
    if (error) {
      console.error("Database connection test failed:", error);
      return {
        success: false,
        error: error.message,
        errorCode: error.code,
        details: error
      };
    }
    
    return { 
      success: true,
      message: "Successfully connected to Supabase database" 
    };
  } catch (err) {
    console.error("Database connection exception:", err);
    return {
      success: false,
      error: err instanceof Error ? err.message : String(err),
      exception: err
    };
  }
};
